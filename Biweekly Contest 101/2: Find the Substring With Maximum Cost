class Solution {
public:
    int maximumCostSubstring(string s, string chars, vector<int>& vals) {
        unordered_map<char,int>mp1;
        unordered_map<char,int>mp2;

        for(int i=0;i<26;i++){
            mp1['a'+i]=i+1;
        }
        
        for(int i=0;i<vals.size();i++){
            mp2[chars[i]]=vals[i];
        }
        
        int ans=0;
        int sum=0;
        
        for(int i=0;i<s.length();i++){
            if(mp2.find(s[i])!=mp2.end()){
                sum+=mp2[s[i]];
            }
            else{
                sum+=mp1[s[i]];
            }
            
            if(sum<0){
                sum=0;
            }
            ans=max(ans,sum);
        }
        
        return ans;
    }
};
