class Solution {
public:
    int minFlips(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        
        int total=0;
        int ans=0;
        
        for(int i=0;i<n/2;i++){
            for(int j=0;j<m/2;j++){
                int one=0;
                if(grid[i][j]==1){
                    one++;
                }
                if(grid[n-i-1][j]==1){
                    one++;
                }
                if(grid[i][m-j-1]==1){
                    one++;
                }
                if(grid[n-i-1][m-j-1]==1){
                    one++;
                }
                if(one==4 || one==0){
                    total+= one;
                    continue;
                }

                if(one<2){
                    ans+=one;
                }
                else{
                    ans+=4-one;
                    total+=4;
                }
                
            }
            
        }

        if(n%2==0 && m%2==0) return ans;

        int palinOnes=0;
        int onechange=0;

        if(n&1){
            for(int j=0;j<m/2;j++){
                if(grid[n/2][j]==1 && grid[n/2][m-j-1]==1) palinOnes++;

                if(grid[n/2][m-j-1]!=grid[n/2][j]){
                    onechange++;
                    ans++;
                }
            }
        }
        
        if(m&1){
            for(int i=0;i<n/2;i++){
                if(grid[i][m/2]==1 && grid[n-i-1][m/2]==1) palinOnes++;
                if(grid[n-i-1][m/2]!=grid[i][m/2]){
                    onechange++;
                    ans++;
                }
            }
        }

        if(palinOnes%2==1){
            if(onechange==0) ans+=2;
        }
        
        
        if(n%2==1 && m%2==1 && grid[n/2][m/2]==1) ans++;
        
        return ans;
        
    }
};
