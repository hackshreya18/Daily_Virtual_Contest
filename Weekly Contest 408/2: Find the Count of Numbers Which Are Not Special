class Solution {
public:
    bool prime(int n){
        if (n < 2) return false;
        for (int i=2; i*i <= n; i++) {
            if (n % i == 0) return false;
        }
        return true;
    }
    int nonSpecialCount(int l, int r) {
        int m = static_cast<int>(sqrt(r)) + 1;
        
        vector<int> primes;
        for (int num = 2; num <= m; ++num) {
        if (prime(num)) {
            primes.push_back(num);
           }
        }
        
        int len=r-l+1;
        int rem=0;
        
        for (int prime : primes) {
        int square = prime * prime;
        if (square >= l && square <= r) {
            rem++;
           }
        }
        
//         for(long long int i=l;i<=r;i++){
//             if(i%2==0 && i==4){
//                 rem++;
//             }
//             else if(i!=1 && i%2==1){
//                 if(prime(i)){
//                     rem++;
//                 }
//             }
//         }
        return len-rem;
    }
};
